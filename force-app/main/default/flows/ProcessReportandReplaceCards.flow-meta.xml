<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Checks if the status of the AsyncCalloutFailed variable is set to True to determine if the callout to the asynchronous Apex action failed.</description>
        <name>IsAsyncCalloutFailedToTrue</name>
        <label>Is AsyncCalloutFailed to True?</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>Other (Default Outcome)</defaultConnectorLabel>
        <rules>
            <name>IsFailed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>AttemptReportandReplaceCardUpdateandDisplayCaseStatus.Outputs.DebitAsyncCalloutFailed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AttemptReportandReplaceCardUpdateandDisplayCaseStatus.Outputs.CreditAsyncCalloutFailed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShowServiceRequestStatus</targetReference>
            </connector>
            <label>Is Failed</label>
        </rules>
    </decisions>
    <description>Allows a case owner to review the report and reissue card request, submits the change, and either updates the case record or notifies the case owner that the update failed.</description>
    <environments>Default</environments>
    <interviewLabel>Process Report and Replace Cards {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Process Report and Replace Cards</label>
    <orchestratedStages>
        <description>Send a Report and Replace Card update request and update the case status.</description>
        <name>PerformReportandReplaceCardRequestandPostUpdateActions</name>
        <label>Perform Report and Replace Card Request and Post-Update Actions</label>
        <locationX>182</locationX>
        <locationY>395</locationY>
        <connector>
            <targetReference>IsAsyncCalloutFailedToTrue</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Calls an asynchronous Apex action to update a service catalog request record for report and replace card. Updates a specified case&apos;s status to closed if a report and replace card update was successful. Otherwise, displays an error to the flow user.</description>
            <name>AttemptReportandReplaceCardUpdateandDisplayCaseStatus</name>
            <actionName>UpdateReportandReplaceCardRequest</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>AccountEmail</name>
                <value>
                    <elementReference>ReviewReportandReplaceCardRequest.Outputs.AccountEmail</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>CaseId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>CreditIntegrationDefinition</name>
                <value>
                    <stringValue>FSC_ReportandReplaceCreditCard</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>DebitIntegrationDefinition</name>
                <value>
                    <stringValue>FSC_ReportandReplaceDebitCard</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>PersonContactId</name>
                <value>
                    <elementReference>ReviewReportandReplaceCardRequest.Outputs.PersonContactId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>RecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Attempt Report and Replace Card Update and Display Case Status</label>
            <requiresAsyncProcessing>true</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Processes a report and replace card update for a service catalog request.</description>
        <name>ProcessReportandReplaceCard</name>
        <label>Process Report and Replace Card</label>
        <locationX>182</locationX>
        <locationY>287</locationY>
        <connector>
            <targetReference>PerformReportandReplaceCardRequestandPostUpdateActions</targetReference>
        </connector>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Allows a case owner to review details and sends an email to the customer who raised a Report and Replace Card request.</description>
            <name>ReviewReportandReplaceCardRequest</name>
            <actionName>ReviewReportandReplaceCard</actionName>
            <actionType>stepBackground</actionType>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>InputRecordId</name>
                <value>
                    <elementReference>$Record.Id</elementReference>
                </value>
            </inputParameters>
            <label>Review Report and Replace Card Request</label>
            <requiresAsyncProcessing>true</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>BackgroundStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <orchestratedStages>
        <description>Shows the status of the service request to the user.</description>
        <name>ShowServiceRequestStatus</name>
        <label>Show Service Request Status</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <exitConditionLogic>and</exitConditionLogic>
        <stageSteps>
            <description>Displays the result of the API callout made to the mulesoft interface.</description>
            <name>APICalloutResult</name>
            <actionName>ShowAsynchronousApexActionCalloutStatus</actionName>
            <actionType>stepInteractive</actionType>
            <assignees>
                <assignee>
                    <elementReference>$Record.Case.Owner:User.Username</elementReference>
                </assignee>
                <assigneeType>User</assigneeType>
            </assignees>
            <canAssigneeEdit>false</canAssigneeEdit>
            <debugSimulateStep>false</debugSimulateStep>
            <entryConditionLogic>and</entryConditionLogic>
            <exitConditionLogic>and</exitConditionLogic>
            <inputParameters>
                <name>Status</name>
                <value>
                    <elementReference>AttemptReportandReplaceCardUpdateandDisplayCaseStatus.Outputs.Status</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>ActionInput__RecordId</name>
                <value>
                    <elementReference>$Record.CaseId</elementReference>
                </value>
            </inputParameters>
            <label>API Callout Result</label>
            <requiresAsyncProcessing>false</requiresAsyncProcessing>
            <runAsUser>false</runAsUser>
            <shouldLock>false</shouldLock>
            <stepSubtype>InteractiveStep</stepSubtype>
        </stageSteps>
    </orchestratedStages>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Orchestrator</processType>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ProcessReportandReplaceCard</targetReference>
        </connector>
        <filterFormula>{!$Record.SvcCatalogItemDefinition.DeveloperName}=&apos;ReportandReplaceCards&apos;</filterFormula>
        <object>SvcCatalogRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
