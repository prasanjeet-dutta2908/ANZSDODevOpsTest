<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Send an email to the user when a case is created.</description>
        <name>SendEmail</name>
        <label>Send Email</label>
        <locationX>50</locationX>
        <locationY>1142</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>IsViaEmailTrue</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>AccountEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Your service request to Request Loan Payoff Statement was created</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action to send an email with an attachment.</description>
        <name>SendEmailWithAttachment</name>
        <label>Send email with attachment</label>
        <locationX>248</locationX>
        <locationY>1958</locationY>
        <actionName>FSCServiceProcessSendEmail</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>AttachmentEmailSubjectFormula</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>caseId</name>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendToEmailId</name>
            <value>
                <elementReference>AccountEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>textTemplate</name>
            <value>
                <elementReference>AttachmentEmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>FSCServiceProcessSendEmail</nameSegment>
        <outputParameters>
            <assignToReference>EmailWithAttachmentStatus</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Sets the values of the fields required to send an email.</description>
        <name>AssignEmailPrerequisites</name>
        <label>Assign Email Prerequisites</label>
        <locationX>2855</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>AccountEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.Account.PersonEmail</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.CaseNumber</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccountName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AccountNameFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PersonContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.Account.PersonContact.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateThroughServiceCatalogRequests</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Address Line 1 from the current service catalog request extended attribute value record in the loop to the SetAddressLine1 Text variable.</description>
        <name>SetAddressLine1</name>
        <label>Set Attribute Value</label>
        <locationX>3647</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>AddressLine1</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Address Line 2 from the current service catalog request extended attribute value record in the loop to the SetAddressLine2 Text variable.</description>
        <name>SetAddressLine2</name>
        <label>Set Attribute Value</label>
        <locationX>3911</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>AddressLine2</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns City from the current service catalog request extended attribute value record in the loop to the City Text variable</description>
        <name>SetCity</name>
        <label>Set Attribute Value</label>
        <locationX>4175</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>City</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Country from the current service catalog request extended attribute value record in the loop to the Country Text variable</description>
        <name>SetCountry</name>
        <label>Set Attribute Value</label>
        <locationX>4703</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Country</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Currency Code from the current service catalog request extended attribute value record in the loop to the CurrencyCode Text variable.</description>
        <name>SetCurrencyCode</name>
        <label>Set Attribute Value</label>
        <locationX>5231</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>CurrencyCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Email from the current service catalog request extended attribute value record in the loop to the Email Text variable.</description>
        <name>SetEmail</name>
        <label>Set Attribute Value</label>
        <locationX>2855</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Email</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Fee from the current service catalog request extended attribute value record in the loop to the Fee Text variable.</description>
        <name>SetFee</name>
        <label>Set Attribute Value</label>
        <locationX>1535</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Fee</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Financial Account Name from the current service catalog request extended attribute value record in the loop to the FinancialAccountName Text variable.</description>
        <name>SetFinancialAccountName</name>
        <label>Set Attribute Value</label>
        <locationX>743</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>FinancialAccountName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Financial Account Number from the current service catalog request extended attribute value record in the loop to the FinancialAccountNumber Text variable.</description>
        <name>SetFinancialAccountNumber</name>
        <label>Set Attribute Value</label>
        <locationX>479</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>FinancialAccountNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Interest from the current service catalog request extended attribute value record in the loop to the Interest Text variable.</description>
        <name>SetInterest</name>
        <label>Set Attribute Value</label>
        <locationX>1271</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Interest</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Payoff Date from the current service catalog request extended attribute value record in the loop to the PayoffDate Text variable</description>
        <name>SetPayoffDate</name>
        <label>Set Attribute Value</label>
        <locationX>2327</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>PayoffDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Penalty from the current service catalog request extended attribute value record in the loop to the Penalty Number variable.</description>
        <name>SetPenalty</name>
        <label>Set Attribute Value</label>
        <locationX>1799</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Penalty</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Postal Code from the current service catalog request extended attribute value record in the loop to the PostalCode Text variable</description>
        <name>SetPostalCode</name>
        <label>Set Attribute Value</label>
        <locationX>4967</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>PostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Principal from the current service catalog request extended attribute value record in the loop to the Principal Text variable.</description>
        <name>SetPrincipal</name>
        <label>Set Attribute Value</label>
        <locationX>1007</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Principal</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Shipping Preference from the current service catalog request extended attribute value record in the loop to the SetShippingPreference Text variable.</description>
        <name>SetShippingPreference</name>
        <label>Set Attribute Value</label>
        <locationX>3383</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ShippingPreference</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns State from the current service catalog request extended attribute value record in the loop to the State Text variable</description>
        <name>SetState</name>
        <label>Set Attribute Value</label>
        <locationX>4439</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>State</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Total Payoff Amount from the current service catalog request extended attribute value record in the loop to the TotalPayoffAmount Text variable</description>
        <name>SetTotalPayoffAmount</name>
        <label>Set Attribute Value</label>
        <locationX>2063</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>TotalPayoffAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Via Email from the current service catalog request extended attribute value record in the loop to the ViaEmail Text variable</description>
        <name>SetViaEmail</name>
        <label>Set Attribute Value</label>
        <locationX>2591</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ViaEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Via Post from the current service catalog request extended attribute value record in the loop to the ViaPost Text variable.</description>
        <name>SetViaPost</name>
        <label>Set Attribute Value</label>
        <locationX>3119</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ViaPost</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateThroughServiceCatalogRequests.TextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the address of the header image used in the email template.</description>
        <name>HeaderImageURL</name>
        <dataType>String</dataType>
        <value>
            <stringValue>https://244fscorg.file.force.com/servlet/servlet.ImageServer?id=015B0000001Hsbn&amp;oid=00DB000000Fzrvi&amp;lastMod=1689143201000</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines if the prerequisites to send an email are available or not.</description>
        <name>HavePrerequisitesToSendAnEmail</name>
        <label>Have Prerequisites To Send An Email?</label>
        <locationX>2987</locationX>
        <locationY>650</locationY>
        <defaultConnector>
            <targetReference>IterateThroughServiceCatalogRequests</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Email Prerequisites Available</defaultConnectorLabel>
        <rules>
            <name>EmailPrerequisitesNotAvailable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N/A</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseNumber</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N/A</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AccountName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N/A</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>PersonContactId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>N/A</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEmailPrerequisites</targetReference>
            </connector>
            <label>Email Prerequisites Not Available</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the email associated with the Account is available or not.</description>
        <name>IsAccountEmailAvailable</name>
        <label>Is Account Email Available?</label>
        <locationX>391</locationX>
        <locationY>1034</locationY>
        <defaultConnectorLabel>Account Email Unavailable</defaultConnectorLabel>
        <rules>
            <name>AccountEmailAvailable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountEmail</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>N/A</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AccountEmail</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AccountEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SendEmail</targetReference>
            </connector>
            <label>Account Email Available</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the attachment is created.</description>
        <name>IsAttachmentCreated</name>
        <label>Is Attachment Created?</label>
        <locationX>248</locationX>
        <locationY>1466</locationY>
        <defaultConnector>
            <targetReference>Pause</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Attachment Not Created</defaultConnectorLabel>
        <rules>
            <name>AttachmentCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAttachment.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAttachment.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SendEmailWithAttachment</targetReference>
            </connector>
            <label>Attachment Created</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the statement needs to be sent through email.</description>
        <name>IsViaEmailTrue</name>
        <label>Is ViaEmail Set toTrue?</label>
        <locationX>50</locationX>
        <locationY>1250</locationY>
        <defaultConnector>
            <targetReference>GetAttachment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Set to True (Default Outcome)</defaultConnectorLabel>
        <rules>
            <name>IsNotSetToTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ViaEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <label>Is Not Set to True</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines which attribute is stored in the current service catalog request extended attribute value record in the loop</description>
        <name>SetWhichAttribute</name>
        <label>Set Which Attribute?</label>
        <locationX>2987</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>HavePrerequisitesToSendAnEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other (Default)</defaultConnectorLabel>
        <rules>
            <name>isAccountNumber</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FinancialAccountNumberAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFinancialAccountNumber</targetReference>
            </connector>
            <label>Financial Account Number</label>
        </rules>
        <rules>
            <name>isFinancialAccountName</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FinancialAccountNameAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFinancialAccountName</targetReference>
            </connector>
            <label>Financial Account Name</label>
        </rules>
        <rules>
            <name>isPrincipal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PrincipalAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.NumberValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPrincipal</targetReference>
            </connector>
            <label>Principal</label>
        </rules>
        <rules>
            <name>isInterest</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>InterestAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.NumberValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetInterest</targetReference>
            </connector>
            <label>Interest</label>
        </rules>
        <rules>
            <name>isFee</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>FeeAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.NumberValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetFee</targetReference>
            </connector>
            <label>Fee</label>
        </rules>
        <rules>
            <name>isPenalty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PenaltyAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.NumberValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPenalty</targetReference>
            </connector>
            <label>Penalty</label>
        </rules>
        <rules>
            <name>isTotalPayoffAmount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>TotalPayoffAmountAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.NumberValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetTotalPayoffAmount</targetReference>
            </connector>
            <label>Total Payoff Amount</label>
        </rules>
        <rules>
            <name>isPayoffDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PayoffDateAttribute</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPayoffDate</targetReference>
            </connector>
            <label>Payoff Date</label>
        </rules>
        <rules>
            <name>isViaEmail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>viaEmailAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetViaEmail</targetReference>
            </connector>
            <label>Via Email</label>
        </rules>
        <rules>
            <name>isEmailValue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>EmailAttribute</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetEmail</targetReference>
            </connector>
            <label>Email</label>
        </rules>
        <rules>
            <name>isViaPost</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>viaPostAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetViaPost</targetReference>
            </connector>
            <label>Via Post</label>
        </rules>
        <rules>
            <name>isShippingPreference</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>ShippingPreferenceAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetShippingPreference</targetReference>
            </connector>
            <label>Shipping Preference</label>
        </rules>
        <rules>
            <name>isAddressLine1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>AddressLine1Attribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetAddressLine1</targetReference>
            </connector>
            <label>Address Line 1</label>
        </rules>
        <rules>
            <name>isAddressLine2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>AddressLine2Attribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetAddressLine2</targetReference>
            </connector>
            <label>Address Line 2</label>
        </rules>
        <rules>
            <name>isCity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CityAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCity</targetReference>
            </connector>
            <label>City</label>
        </rules>
        <rules>
            <name>isState</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>StateAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetState</targetReference>
            </connector>
            <label>State</label>
        </rules>
        <rules>
            <name>isCountry</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CountryAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCountry</targetReference>
            </connector>
            <label>Country</label>
        </rules>
        <rules>
            <name>isPostalCode</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PostalCodeAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetPostalCode</targetReference>
            </connector>
            <label>Postal Code</label>
        </rules>
        <rules>
            <name>isCurrencyCode</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.SvcCtlgItemAttrLabel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CurrencyCodeAttribute</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateThroughServiceCatalogRequests.TextValue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCurrencyCode</targetReference>
            </connector>
            <label>Currency Code</label>
        </rules>
    </decisions>
    <description>Allows an agent to review the details of a customer&apos;s loan payoff statement request.</description>
    <environments>Default</environments>
    <formulas>
        <description>Creates the account name by concatenating first name and last name.</description>
        <name>AccountNameFormula</name>
        <dataType>String</dataType>
        <expression>{!IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.Account.FirstName}&amp;IF(NOT(ISBLANK({!IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.Account.FirstName})),&quot; &quot;,&quot;&quot;)&amp;{!IterateThroughServiceCatalogRequests.SvcCatalogRequest.Case.Account.LastName}</expression>
    </formulas>
    <formulas>
        <description>Creates the row for email in the email template.</description>
        <name>AddEmailRow</name>
        <dataType>String</dataType>
        <expression>IF({!ViaEmail}&lt;&gt;&apos;No&apos; ,&apos;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#x2022;&amp;nbsp;&amp;nbsp;Emailed to: &apos;+&apos;&lt;strong style=&quot;padding: 0;margin: 0;font-family:Segoe UI, Helvetica, Arial, sans-serif;&quot;&gt;&lt;a&gt;&apos;+ {!Email} +&apos;&lt;/a&gt;&lt;/strong&gt;&apos;,&apos; &apos;)</expression>
    </formulas>
    <formulas>
        <description>Creates the row for the shipping address in the email template.</description>
        <name>AddShippingAddressRow</name>
        <dataType>String</dataType>
        <expression>IF({!ViaPost}==&apos;Yes&apos; ,&apos;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;#x2022;&amp;nbsp;&amp;nbsp;Shipped to: &apos;+&apos;&lt;strong style=&quot;padding: 0;margin: 0;font-family: Segoe UI, Helvetica, Arial, sans-serif;&quot;&gt;&apos;+{!FullAddressFormula}+&apos;&lt;/strong&gt;  through &apos;+&apos;&lt;strong style=&quot;padding: 0;margin: 0;font-family: Segoe UI, Helvetica, Arial, sans-serif;&quot;&gt;&apos;+{!ShippingPreference}+&apos;&lt;/strong&gt;&lt;span&gt; shipping.&lt;/span&gt;&apos; ,&apos; &apos;)</expression>
    </formulas>
    <formulas>
        <description>Adds the Email subject.</description>
        <name>AttachmentEmailSubjectFormula</name>
        <dataType>String</dataType>
        <expression>&apos;Loan Payoff Details - &apos;&amp;{!FinancialAccountNameFormula}</expression>
    </formulas>
    <formulas>
        <description>Adds the financial account name.</description>
        <name>FinancialAccountNameFormula</name>
        <dataType>String</dataType>
        <expression>{!FinancialAccountNumber} &amp; &apos; - &apos; &amp; {!FinancialAccountName}</expression>
    </formulas>
    <formulas>
        <description>Creates the full address by concatenating the address fields.</description>
        <name>FullAddressFormula</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!AddressLine1})),{!AddressLine1},&apos;&apos;) &amp; IF(NOT(ISBLANK({!AddressLine2})),IF(NOT(ISBLANK({!AddressLine1})), &apos;, &apos; &amp; {!AddressLine2},{!AddressLine2}),&apos;&apos;) &amp; IF(NOT(ISBLANK({!City})),IF(OR(NOT(ISBLANK({!AddressLine1})),NOT(ISBLANK({!AddressLine2}))), &apos;, &apos; &amp; {!City},{!City}),&apos;&apos;) &amp; IF(NOT(ISBLANK({!State})),IF(OR(NOT(ISBLANK({!AddressLine1})),NOT(ISBLANK({!AddressLine2})),NOT(ISBLANK({!City}))),&apos;, &apos; &amp; {!State}, {!State}),&apos;&apos;) &amp; IF(NOT(ISBLANK({!Country})),IF(OR(NOT(ISBLANK({!AddressLine1})),NOT(ISBLANK({!AddressLine2})),NOT(ISBLANK({!City})),NOT(ISBLANK({!State}))),&apos;, &apos; &amp; {!Country}, {!Country}),&apos;&apos;) &amp; IF(NOT(ISBLANK({!PostalCode})),IF(OR(NOT(ISBLANK({!AddressLine1})),NOT(ISBLANK({!AddressLine2})),NOT(ISBLANK({!City})),NOT(ISBLANK({!State})), NOT(ISBLANK({!Country}))),&apos;, &apos; &amp; {!PostalCode}, {!PostalCode}),&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <description>Counts down for a minute.</description>
        <name>OneMinute</name>
        <dataType>DateTime</dataType>
        <expression>{!$Flow.CurrentDateTime}+0.0007</expression>
    </formulas>
    <interviewLabel>Review Loan Payoff Statement Request {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Review Loan Payoff Statement Request</label>
    <loops>
        <description>Iterates through Service Catalog Request Extended Attribute Values from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>IterateThroughServiceCatalogRequests</name>
        <label>Iterate Through Service Catalog Requests</label>
        <locationX>391</locationX>
        <locationY>242</locationY>
        <collectionReference>GetServiceCatalogRequestExtendedAttributes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetWhichAttribute</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IsAccountEmailAvailable</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the Attachment record with the ParentID values that matches the CaseId passed into the flow.</description>
        <name>GetAttachment</name>
        <label>Get Attachment</label>
        <locationX>248</locationX>
        <locationY>1358</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsAttachmentCreated</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Attachment</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the service catalog request extended attribute value records with a record Id matching the SvcCatalogRequestId that was passed into the flow. Stores the results in the Service Catalog Request Extended Attribute Value collection variable.</description>
        <name>GetServiceCatalogRequestExtendedAttributes</name>
        <label>Get Service Catalog Request Extended Attributes</label>
        <locationX>391</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateThroughServiceCatalogRequests</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SvcCatalogRequestId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>InputRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SvcCatalogReqExtdAttrVal</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>265</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetServiceCatalogRequestExtendedAttributes</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <description>Stores the email content to be sent</description>
        <name>AttachmentEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;div class=&quot;base&quot; style=&quot;padding: 56px;margin: 0px;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;background-color: #F4F5F4;&quot;&gt; &lt;div class=&quot;container&quot; style=&quot;padding: 0;margin: 8px auto;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;background-color: #FFFFFF;border-radius: 5px;width: 660px;font-size: 16px;&quot;&gt; &lt;a&gt; &lt;img src=&apos;{!HeaderImageURL}&apos; width=&quot;660&quot; height=&quot;206&quot; alt=&quot;&quot; style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; &lt;/a&gt; &lt;div class=&quot;content&quot; style=&quot;padding: 32px;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;line-height: 1.5;&quot;&gt; &lt;p class=&quot;first-text-block&quot; style=&quot;padding: 0;margin: 16px 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;margin-bottom: 40px;&quot;&gt; Hello &lt;strong style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!AccountName}&lt;/strong&gt;, &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Please find attached the loan payoff details for selected &lt;strong style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!FinancialAccountNameFormula}&lt;/strong&gt;. &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; &lt;/p&gt; &lt;p class=&quot;email-footer&quot; style=&quot;padding: 0;margin: 16px 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;margin-top: 40px;font-style: italic;&quot;&gt; Thank You, &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Customer Support Team &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>Stores the body of the email that’s sent when a case is created.</description>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;div class=&quot;base&quot; style=&quot;padding: 56px;margin: 0px;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;background-color: #F4F5F4;&quot;&gt; &lt;div class=&quot;container&quot; style=&quot;padding: 0;margin: 8px auto;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;background-color: #FFFFFF;border-radius: 5px;width: 660px;font-size: 16px;&quot;&gt; &lt;a&gt; &lt;img src=&apos;{!HeaderImageURL}&apos; width=&quot;660&quot; height=&quot;206&quot; alt=&quot;&quot; style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; &lt;/a&gt; &lt;div class=&quot;content&quot; style=&quot;padding: 32px;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;line-height: 1.5;&quot;&gt; &lt;p class=&quot;first-text-block&quot; style=&quot;padding: 0;margin: 16px 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;margin-bottom: 40px;&quot;&gt; Hello &lt;strong style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!AccountName}&lt;/strong&gt;, &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Your service request to Request Loan Payoff Statement was created and your case number is &lt;span style=&quot;font-weight: bold;color: #000000;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!CaseNumber}&lt;/span&gt;. &lt;/p&gt; &lt;p style=&quot;padding: 0;margin: 16px 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; &lt;u&gt;Request Summary:&lt;/u&gt; &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Selected Account: &lt;strong style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!FinancialAccountNameFormula}&lt;/strong&gt; &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Pay Off Date: &lt;strong style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt;{!PayoffDate}&lt;/strong&gt; &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; &lt;br&gt; The statement will be: {!AddEmailRow}{!AddShippingAddressRow} &lt;p class=&quot;email-footer&quot; style=&quot;padding: 0;margin: 16px 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;margin-top: 40px;font-style: italic;&quot;&gt; Thank You, &lt;br style=&quot;padding: 0;margin: 0;font-family: &apos;Segoe UI&apos;, Helvetica, Arial, sans-serif;&quot;&gt; Customer Support Team &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</text>
    </textTemplates>
    <variables>
        <description>Stores the value of Account Email of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>AccountEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of Account Name of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>AccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the AddressLine1 attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>AddressLine1</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Address Line 1</description>
        <name>AddressLine1Attribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Address Line 1</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Address Line 2 attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>AddressLine2</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Address Line 2.</description>
        <name>AddressLine2Attribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Address Line 2</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of the case to update that is passed into the flow.</description>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of the service catalog request record passed into the flow.</description>
        <name>CaseNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the values for City of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>City</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for City.</description>
        <name>CityAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>City</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Country attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Country</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Country</description>
        <name>CountryAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Country</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Currency Code attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>CurrencyCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Currency Code.</description>
        <name>CurrencyCodeAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Currency Code</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Email attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Email</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Email.</description>
        <name>EmailAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Email</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the email attachment status.</description>
        <name>EmailWithAttachmentStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Fee attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Fee</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Fee.</description>
        <name>FeeAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Fee</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Financial Account Name attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>FinancialAccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Financial Account Name</description>
        <name>FinancialAccountNameAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Account Name</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Financial Account Number attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>FinancialAccountNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Financial Account Number</description>
        <name>FinancialAccountNumberAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Account Number</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the serviceCatalogRequestId passed into the flow and is available as output from the flow.</description>
        <name>InputRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Interest attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Interest</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Interest.</description>
        <name>InterestAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Interest</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Payoff Date attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>PayoffDate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Payoff Date</description>
        <name>PayoffDateAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Payoff Date</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Penalty attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Penalty</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Penalty.</description>
        <name>PenaltyAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Penalty</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of Person Contact Id of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>PersonContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Postal Code attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>PostalCode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Postal Code.</description>
        <name>PostalCodeAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Postal Code</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Principal attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>Principal</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Principal.</description>
        <name>PrincipalAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Principal</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Shipping Preference attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>ShippingPreference</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Shipping Preference</description>
        <name>ShippingPreferenceAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Shipping Preference</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the State attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>State</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for State.</description>
        <name>StateAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>State</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Total Payoff Amount attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>TotalPayoffAmount</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for Total Payoff Amount.</description>
        <name>TotalPayoffAmountAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Total Payoff Amount</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Via Email attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>ViaEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for via Email?</description>
        <name>viaEmailAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Send Statement Via Email</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the value of the Via Post attribute of the service catalog request extended attribute value record from GetServiceCatalogRequestExtendedAttributes.</description>
        <name>ViaPost</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>N/A</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the attribute name for via Post?</description>
        <name>viaPostAttribute</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Send Statement Via Post</stringValue>
        </value>
    </variables>
    <waits>
        <description>Determines when to pause the the flow interview and resume when conditions are met.</description>
        <name>Pause</name>
        <label>Pause</label>
        <locationX>380</locationX>
        <locationY>1574</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>PauseUntilAttachmentCreation</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>SendEmailWithAttachment</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>OneMinute</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
            </inputParameters>
            <label>Pause until attachment creation</label>
        </waitEvents>
    </waits>
</Flow>
